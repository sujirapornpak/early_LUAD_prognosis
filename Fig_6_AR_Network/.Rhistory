setwd("~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network")
# Install essential packages for Association rules
# install.packages("arules")
# install.packages("arulesViz")
# install.packages("plotly")
library(arules)
library(arulesViz)
library(tidyverse)
library(knitr)
library(lubridate)
library(plyr) ## must unload plyr and reload again (plyr must be loaded before dplyr)
library(dplyr)
library(plotly)
library(writexl)
clus1 <- read.transactions('~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network/8.3_OUT_cSIF_Driv47_318LUAD_clus1-90_apriori_7Mar.csv', format = 'basket', sep=',')
clus2 <- read.transactions('~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network/8.3_OUT_cSIF_Driv47_318LUAD_clus2-158_apriori_7Mar.csv', format = 'basket', sep=',')
clus3 <- read.transactions('~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network/8.3_OUT_cSIF_Driv47_318LUAD_clus3-70_apriori_7Mar.csv', format = 'basket', sep=',')
clus1
# transactions in sparse format with
# 90 transactions (rows) and
# 45 items (columns)
clus2
# transactions in sparse format with
# 158 transactions (rows) and
# 47 items (columns)
clus3
summary(clus1)       # #<<<<<-----------%%%%%%%%%%---<<<<----------Test on 24Oct2022
summary(clus2)
summary(clus3)
if (!require("RColorBrewer")) {
# install color package of R
install.packages("RColorBrewer")
#include library RColorBrewer
library(RColorBrewer)
}
# Create an item frequency plot for the top 20 items
# If type=absolute, it will plot numeric frequencies of each item independently.
# If type=relative, it will plot how many times these items have appeared as compared to others.
itemFrequencyPlot(clus1,topN=20,type="absolute",col=brewer.pal(8,'Pastel2'), main="Absolute Item Frequency Plot")
#---26Oct22: For maxlen=2 (creating weighted undirected graph by Networkx)
association.rulesClus1_005_2 <- apriori(clus1, parameter = list(supp=0.05, conf=0.5,maxlen=2)) #42 rules
association.rulesClus2_005_2 <- apriori(clus2, parameter = list(supp=0.05, conf=0.5,maxlen=2)) #57 rules
association.rulesClus3_005_2 <- apriori(clus3, parameter = list(supp=0.05, conf=0.5,maxlen=2)) #59 rules
summary(association.rulesClus1_005)
summary(association.rulesClus1_005_2)
summary(association.rulesClus2_005_2) #supp=0.05
summary(association.rulesClus3_005_2) #supp=0.05
#=============//=============// =============// =============// =============//
# Print only top 10 rules:
inspect(association.rulesClus1_005_2[1:10])   #<<<<<-----------%%%%%%%%%%---<<<<----------
# Filter rules with confidence greater than 0.79 (or 80% up)
subRulesC1_005_2<-association.rulesClus1_005_2[quality(association.rulesClus1_005_2)$confidence>0.79]
plot(subRulesC1_005_2)  # Scatter plot for 72 rules
plot(subRulesC1_005_2,method="two-key plot") # 72 rules
inspect(association.rulesClus2_005_2[1:10])   #For Cluster 2
inspect(association.rulesClus3_005_2[1:10])   #For Cluster 3
subRulesC2_005_2<-association.rulesClus2_005_2[quality(association.rulesClus1_005_2)$confidence>0.49]
subRulesC3_005_2<-association.rulesClus3_005_2[quality(association.rulesClus1_005_2)$confidence>0.49]
# 6.3 Graph-Based Visualizations
# Rank by "support" value
top42subRuleC1_005_2 <- head(subRulesC1_005_2, n = 42, by = "support")  #42 rules, maxlength=2
# 6.3 Graph-Based Visualizations
# Rank by "support" value
top42subRuleC1_005_Sup <- head(subRulesC1_005_2, n = 42, by = "support")  #42 rules, maxlength=2
plot(top42subRuleC1_005_Sup, method="paracoord",control = list(reorder = TRUE))
plot(top42subRuleC1_005_Sup, method = "graph",  control = list(type="items"))
# 6.3 Graph-Based Visualizations
# Rank by "support" value
top42subRuleC1_005_Sup <- head(subRulesC1_005_2, n = 42, by = "support")  #42 rules, maxlength=2
top57subRuleC2_005_Sup <- head(subRulesC2_005_2, n = 57, by = "support")  #57 rules, maxlength=2
top59subRuleC3_005_Sup <- head(subRulesC3_005_2, n = 59, by = "support")  #59 rules, maxlength=2
plot(top42subRuleC1_005_Sup, method="paracoord",control = list(reorder = TRUE))
plot(top57subRuleC2_005_Sup, method="paracoord",control = list(reorder = TRUE))
plot(top59subRuleC3_005_Sup, method="paracoord",control = list(reorder = TRUE))
plot(top42subRuleC1_005_Sup, method = "graph",  control = list(type="items"))
plot(top57subRuleC2_005_Sup, method = "graph",  control = list(type="items"))
plot(top59subRuleC3_005_Sup, method = "graph",  control = list(type="items"))
inspect(top42subRuleC1_005_Sup)
#=============//=============// =============// =============// =============//
# 7 Export to Excel file
# For maxlen=2 (creating weighted undirected graph by Networkx)
df_top42subRuleC1_005_2 <- inspect(top42subRuleC1_005_Sup)
df_top57subRuleC2_005_2 <- inspect(top57subRuleC2_005_Sup)
df_top59subRuleC3_005_2 <- inspect(top59subRuleC3_005_Sup)
write_xlsx(df_top42subRuleC1_005_2,"~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network/output/2.2_Out_Dri47_318clus1_90_sup005_maxlen2_42rules_24Oct.xlsx", col_names = TRUE,format_headers = TRUE)
write_xlsx(df_top57subRuleC2_005_2,"~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network/output/2.2_Out_Dri47_318clus2_158_sup005_maxlen2_57rules_24Oct.xlsx", col_names = TRUE,format_headers = TRUE)
write_xlsx(df_top59subRuleC3_005_2,"~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network/output/2.2_Out_Dri47_318clus3_70_sup005_maxlen2_59rules_24Oct.xlsx", col_names = TRUE,format_headers = TRUE)
# Filter rules with confidence greater than 0.49 (or 50% up)
subRulesC1_005_2<-association.rulesClus1_005_2[quality(association.rulesClus1_005_2)$confidence>0.49]
subRulesC2_005_2<-association.rulesClus2_005_2[quality(association.rulesClus1_005_2)$confidence>0.49]
subRulesC3_005_2<-association.rulesClus3_005_2[quality(association.rulesClus1_005_2)$confidence>0.49]
# 6.3 Graph-Based Visualizations
# Rank by "support" value
top42subRuleC1_005_Sup <- head(subRulesC1_005_2, n = 42, by = "support")  #42 rules, maxlength=2
top57subRuleC2_005_Sup <- head(subRulesC2_005_2, n = 57, by = "support")  #57 rules, maxlength=2
top59subRuleC3_005_Sup <- head(subRulesC3_005_2, n = 59, by = "support")  #59 rules, maxlength=2
inspect(top42subRuleC1_005_Sup)
inspect(top57subRuleC2_005_Sup)
inspect(top59subRuleC3_005_Sup)
#=============//=============// =============// =============// =============//
# 7 Export to Excel file
# For maxlen=2 (creating weighted undirected graph by Networkx)
df_top42subRuleC1_005_2 <- inspect(top42subRuleC1_005_Sup)
df_top57subRuleC2_005_2 <- inspect(top57subRuleC2_005_Sup)
df_top59subRuleC3_005_2 <- inspect(top59subRuleC3_005_Sup)
write_xlsx(df_top42subRuleC1_005_2,"~/Desktop/GitLab/early_LUAD_prognosis/Fig_6_AR_Network/output/2.2_Out_Dri47_318clus1_90_sup005_maxlen2_42rules_24Oct.xlsx", col_names = TRUE,format_headers = TRUE)
